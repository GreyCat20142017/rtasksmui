{"version":3,"sources":["serviceWorker.js","constants.js","apps/main/AppMain.jsx","apps/figures/figuresconstants.js","theme.js","apps/figures/components/DraggableFigure.jsx","apps/figures/components/FixBoardCell.jsx","apps/figures/components/FixBoard.css.js","apps/figures/components/FixBoard.jsx","apps/figures/components/EmptyFigure.jsx","apps/figures/components/TrashBin.jsx","apps/figures/figuresfunctions.js","apps/figures/components/FiguresCreator.jsx","App.css.js","apps/figures/AppFigures.js","apps/it/chart/chartconstants.js","apps/it/chart/chartfunctions.js","apps/it/chart/MUILineChart.jsx","common/SimpleSnackbar.jsx","apps/it/components/ItChart.jsx","common/table/actions/ActionsHeaders.jsx","components/icon/MUIIcon.jsx","common/table/actions/ActionsCells.jsx","common/table/MUITable.jsx","apps/it/components/ItTable.jsx","functions.js","LSContext.js","components/form/Form.jsx","components/form/FormDialog.jsx","apps/it/components/ItLsTable.jsx","apps/it/AppIt.jsx","containers/AppItContainer.js","routes.jsx","common/NotFound.jsx","apps/AppSwitcher.jsx","components/submenu/Submenu.jsx","common/MainMenu.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","APP_ROOT","origin","TASKS","MAIN","title","component","comment","href","FIGURES","IT","TASKS_ORDER","Object","keys","map","key","DEFAULT_IT_URL","ROWS_PER_PAGE_OPTIONS","DICTIONARY","IT_COLUMNS","IT_COLUMNS_ERRORS","AppMain","Typography","color","variant","Divider","FIGURE_TYPES","DND_TYPES","FIX_BOARD_CELLS","xs","sm","MDB_COLOR","PINK_COLOR","pink","DARKPINK_COLOR","theme","createMuiTheme","palette","primary","main","secondary","blueGrey","error","contrastThreshold","tonalOffset","fontFamily","join","typography","h1","fontSize","fontWeight","h2","padding","colorArray","deepOrange","indigo","DraggableFigure","width","height","isDragging","id","useDrag","item","type","collect","monitor","opacity","dragRef","Tooltip","Paper","ref","className","style","backgroundColor","cursor","Cell","classes","cell","fixed","addFixed","ind","useDrop","accept","drop","Grid","paper","Skeleton","useStyles","makeStyles","root","flexGrow","spacing","marginTop","textAlign","text","display","justifyContent","alignItems","FixBoard","container","EmptyFigure","onBoard","attributes","TrashBin","deleteFigure","deleteFixed","IconButton","bin","onClick","aria-label","getRandomColor","Array","isArray","length","sample","FiguresCreator","last","setLast","ButtonGroup","btnGroup","Button","btn","MIN_SIDE_SIZE","wrapper","app","flexDirection","minHeight","paperMain","margin","marginLeft","grid","flexWrap","border","marginBottom","firstButton","active","textDecoration","normal","AppFigures","useState","setFixed","index","dragged","assign","newFixed","CHART_COLORS","CHART_CANVAS","dayMonth","strDate","dateArray","split","getTranslate","word","dictionary","getChartDatasets","data","columns","datasets","forEach","column","push","label","row","getChartOptions","minY","maintainAspectRatio","pointHoverRadius","scales","yAxes","ticks","min","getPreparedData","chartData","labels","date","resume","options","NF","Intl","NumberFormat","MUILineChart","chart","setChart","chartTitle","chartFooter","onLegendClick","canvas","useRef","useEffect","ctx","current","getContext","Chart","drawChart","update","evt","parseInt","close","snack","amber","SimpleSnackbar","open","message","onSnackClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","action","ItChart","setMessage","page","setPage","rowsPerPage","setRowsPerPage","slice","preparedData","setPreparedData","format","hidden","event","reason","TablePagination","size","rowsPerPageOptions","labelRowsPerPage","count","onChangePage","newPage","onChangeRowsPerPage","target","value","ActionsHeaders","actions","TableCell","MUIIcon","icon","iconSize","Menu","Home","Settings","Search","Info","MusicOff","PlaylistPlay","PlaylistAdd","Pets","Delete","Edit","ActionsCells","rowInd","onCallback","onButtonClick","getCell","rowIndex","isNumber","getAlign","aligns","getHoverTitle","hoverField","MUITable","rowsLimit","maxWidth","tableWrapper","maxHeight","overflowY","Table","stickyHeader","TableHead","TableRow","align","TableBody","selectRoot","ItTable","getDataFromLocalStorage","localStorage","getItem","JSON","parse","filter","every","allFieldsPresent","saveDataToLocalStorage","items","result","setItem","stringify","err","React","createContext","getCurrentDate","currentDate","Date","getFullYear","getMonth","getDate","getEdited","field","isData","testedArray","isValidIndex","isError","errors","fieldName","Form","edited","onDialogClose","useForm","register","handleSubmit","useContext","LSContext","lsData","setLsData","onSubmit","element","newData","getStateAfterEdit","getStateAfterCreate","TextField","name","inputRef","required","defaultValue","fullWidth","autoFocus","getErrorMessages","FormDialog","isFormOpen","setIsFormOpen","setEdited","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","ItLSTable","Add","delete","edit","TabContent","Math","AppIt","activeTab","setActiveTab","Tabs","indicatorColor","textColor","onChange","newActive","Tab","AppItContainer","setData","setError","fetch","then","res","json","catch","routes","NotFound","AppSwitcher","routeResult","useRoutes","task","entries","find","taskSearch","pathname","Submenu","submenuItems","withNavLink","onLight","callback","switchIcon","anchorEl","setAnchorEl","path","usePath","convertedItems","handleClose","handleCloseCommon","link","navigate","aria-controls","aria-haspopup","currentTarget","disabled","submenu","keepMounted","MenuItem","MainMenu","setActive","App","CssBaseline","Provider","ThemeProvider","Container","AppBar","position","Toolbar","Hidden","mdDown","setBasepath","ReactDOM","render","backend","HTML5Backend","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.535672ae.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const url = window.location.origin;\nexport const APP_ROOT = ((url.match(/github\\.io/gi)) ? '/rtasksmui' : '');\n\nexport const TASKS = {\n    MAIN: {\n        title: 'Главная',\n        component: null,\n        comment: 'Тренировка на котиках - 2. React (hooks) - CRA + Material UI-4x, chart.js, React-DnD, hookrouter',\n        href: '/'\n    },\n\n    FIGURES: {\n        title: 'Figures',\n        component: 'AppFigures',\n        comment: 'React DnD',\n        href: '/figures'\n    },\n\n    IT: {\n        title: 'IT-Chart',\n        component: 'AppIt',\n        comment: '\"Есть ли жизнь в ИТ?\" - таблица и графики по данным о количестве вакансий/резюме на сайте \"Мой круг\" (в некоторые дни осени 2019)',\n        href: '/it'\n    },\n};\n\nexport const TASKS_ORDER = [...Object.keys(TASKS).map(key => TASKS[key])];\n\nexport const SNACK_OPEN_TIME = 7000;\n\nexport const DEFAULT_IT_URL = APP_ROOT + '/data/it.json';\n\nexport const ROWS_LIMIT = 10;\nexport const POINT_LIMIT = 5;\nexport const LABELS_LIMIT = 5;\nexport const ROWS_PER_PAGE_OPTIONS = [5, 10, 15, 50];\n\nexport const DICTIONARY = {\n    'date': 'дата',\n    'total': 'всего',\n    'remote': 'удаленка',\n    'resume': 'резюме',\n};\n\nexport const LOCAL_STORAGE = 'rtasksmui';\nexport const LS_FLAG = 'fromLS';\n\nexport const IT_COLUMNS = ['date', 'total', 'remote', 'resume'];\nexport const IT_COLUMNS_ERRORS = {\n    'date': 'Дата должна быть заполнена и быть корректной',\n    'total': 'Обязательное поле \"Всего вакансий\" должно быть числом >=0',\n    'remote': 'Обязательное поле \"Удаленка\" должно быть числом >=0',\n    'resume': 'Обязательное поле \"Резюме\" должно быть числом >=0'\n};","import React from 'react';\nimport {Typography, Divider} from '@material-ui/core';\n\nconst AppMain = () => (\n    <>\n        <Typography color='primary'>IT-CHART</Typography>\n        <Typography variant='caption'>IT-CHART - таблица и графики. Данные по умолчанию берутся из json-файла.\n            Кроме этого можно добавлять новые данные с сохранением в LocalStorage.\n            Добавляемые пользователем данные можно изменять и удалять.\n        </Typography>\n        <Typography variant='caption'>Число точек графика задается в параметрах пагинации. При клике на точку графика -\n            вывыодятся\n            детальные данные во всплывающей подсказке.\n        </Typography>\n        <Divider/>\n        <Typography color='primary'>FIGURES</Typography>\n        <Typography variant='caption'>FIGURES - просто небольшая задача с drag-and-drop и MUI</Typography>\n    </>\n);\n\nexport default AppMain;","export const FIGURE_TYPES = {\n    SQUARE: 'square',\n    RECTANGLE: 'rectangle'\n};\n\nexport const MAX_SIDE_RATIO = 2;\nexport const MIN_SIDE_SIZE = 70;\n\nexport const DND_TYPES = {FIGURE : ' FIGURE'};\n\nexport const FIX_BOARD_CELLS = [\n    {xs: 12, sm: 4},\n    {xs: 12, sm: 4},\n    {xs: 12, sm: 4},\n    {xs: 6, sm: 3},\n    {xs: 6, sm: 3},\n    {xs: 6, sm: 3},\n    {xs: 6, sm: 3}\n];\n\n","import {createMuiTheme} from '@material-ui/core/styles';\n\nimport {blueGrey, deepOrange, indigo, pink} from '@material-ui/core/colors';\n\nexport const BACK_COLOR = 'rgba(242, 242, 242, 0.3)';\nexport const DEFAULT_COLOR = 'rgba(122, 144, 244, 0.2)';\nexport const MDB_COLOR = 'rgba(89, 105, 141, 1)';\nexport const PINK_COLOR = pink[100];\nexport const DARKPINK_COLOR = pink[800];\n\nexport const theme = createMuiTheme({\n\n    palette: {\n        primary: {\n            // light: will be calculated from palette.primary.main,\n            main: MDB_COLOR\n        },\n        secondary: {\n            main: blueGrey[200],\n            // dark: will be calculated from palette.secondary.main,\n        },\n        error: {main: DARKPINK_COLOR},\n        contrastThreshold: 3,\n        tonalOffset: 0.2,\n    },\n\n    fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        'Arial',\n        'sans-serif'\n    ].join(','),\n    typography: {\n        h1: {\n            fontSize: 24,\n            color: MDB_COLOR,\n            fontWeight: 'bold'\n        },\n        h2: {\n            fontSize: 20,\n            color: MDB_COLOR,\n            fontWeight: 'bold',\n            padding: '0.5em'\n        }\n    }\n});\n\nexport const colorArray = [\n    blueGrey[200], deepOrange[100],\n    blueGrey[500], deepOrange[200], MDB_COLOR, indigo[100], indigo[200]\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {useDrag} from 'react-dnd';\nimport {Paper, Tooltip} from '@material-ui/core';\n\nimport {DND_TYPES, MIN_SIDE_SIZE} from '../figuresconstants';\nimport {DEFAULT_COLOR} from '../../../theme';\n\nconst DraggableFigure = ({\n                                    width = MIN_SIDE_SIZE,\n                                    height = MIN_SIDE_SIZE,\n                                    color = DEFAULT_COLOR,\n                                    title = 'Новый элемент. Нужно переместить на сетку.',\n                                    isDragging = false,\n                                    id = null\n                                }) => {\n\n    const [, dragRef] = useDrag({\n        item: {type: DND_TYPES.FIGURE, id: id},\n        collect: monitor => ({\n            opacity: monitor.isDragging() ? 0.2 : 1,\n        }),\n    });\n\n    return (\n        <Tooltip title={title}>\n            <Paper ref={dragRef} className='draggable'\n                   style={{\n                       width: MIN_SIDE_SIZE * width / height,\n                       height: MIN_SIDE_SIZE,\n                       backgroundColor: color,\n                       cursor: 'pointer'\n                   }}/>\n        </Tooltip>\n    );\n};\n\nDraggableFigure.propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    color: PropTypes.string,\n    title: PropTypes.string,\n    isDragging: PropTypes.bool,\n    id: PropTypes.any\n};\n\nexport default DraggableFigure;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {useDrop} from 'react-dnd';\n\nimport {Grid, Paper} from '@material-ui/core';\nimport {Skeleton} from '@material-ui/lab';\n\nimport DraggableFigure from './DraggableFigure';\nimport {DND_TYPES, MIN_SIDE_SIZE} from '../figuresconstants';\n\nconst Cell = ({classes = {}, cell, fixed, addFixed, ind}) => {\n\n    const [, drop] = useDrop({\n        accept: DND_TYPES.FIGURE,\n        drop: (item) => {\n            if (!fixed[ind]) {\n                addFixed(ind, item.id);\n            }\n        }\n    });\n\n    return (\n        <Grid className={classes.cell} item xs={cell.xs} sm={cell.sm} key={ind} ref={drop}>\n            <Paper className={classes.paper}>\n                {fixed[ind] ?\n                    <DraggableFigure classes={classes} {...fixed[ind]} id={ind}\n                                     title={`Фигура из ячейки № ${ind + 1}: ${fixed[ind]['type'] || ''}`}/> :\n                    <Skeleton height={MIN_SIDE_SIZE} variant={'rect'}/>\n                }\n            </Paper>\n        </Grid>\n    );\n};\n\nCell.propTypes = {\n    classes: PropTypes.object,\n    cell: PropTypes.object.isRequired,\n    fixed: PropTypes.arrayOf(PropTypes.object),\n    addFixed: PropTypes.func.isRequired,\n    ind: PropTypes.number.isRequired\n};\n\nexport default Cell;","import {makeStyles} from '@material-ui/core';\nimport {BACK_COLOR} from '../../../theme';\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        padding: theme.spacing(1),\n        marginTop: theme.spacing(2),\n        backgroundColor: BACK_COLOR,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    cell: {\n        alignItems: 'stretch'\n    }\n}));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Grid, Typography} from '@material-ui/core';\n\nimport {FIX_BOARD_CELLS} from '../figuresconstants';\nimport Cell from './FixBoardCell';\nimport {useStyles} from './FixBoard.css';\n\nconst FixBoard = ({fixed = [], addFixed}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography variant={'h2'}>Сетка для размещения фигур</Typography>\n            <Grid container spacing={3}>\n                {FIX_BOARD_CELLS.map((cell, ind) => (\n                    <Cell key={ind} classes={classes} cell={cell} fixed={fixed} addFixed={addFixed} ind={ind}/>\n                ))}\n            </Grid>\n            <Typography variant={'caption'}>Фигуры можно перемещать в пустые ячейки и отправлять в корзину</Typography>\n        </div>\n    );\n};\n\nFixBoard.propTypes = {\n    fixed: PropTypes.arrayOf(PropTypes.object),\n    addFixed: PropTypes.func.isRequired\n};\n\nexport default FixBoard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {Paper, Tooltip} from '@material-ui/core';\n\nimport {MIN_SIDE_SIZE} from '../figuresconstants';\n\n/**\n * Вариант onBoard для пустой фигуры оставлен для варианта сетки с возможностью добавления в последнюю пустую ячейку\n * @param onBoard\n * @returns {*}\n * @constructor\n */\nconst EmptyFigure = ({onBoard = false}) => {\n    const kind = onBoard ? 'перемещенный' : 'сгенерированный';\n    const title = 'Сюда будет добавлен ' + kind + ' элемент';\n    const attributes = {\n        style: {\n            width: MIN_SIDE_SIZE,\n            height: MIN_SIDE_SIZE,\n            backgroundColor: 'white'\n        }\n    };\n    return (\n        <Tooltip title={title || '?'}>\n            {onBoard ? <div {...attributes}/> : <Paper {...attributes}/>}\n        </Tooltip>\n    );\n};\n\nEmptyFigure.propTypes = {\n    onBoard: PropTypes.bool\n};\n\nexport default EmptyFigure;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {useDrop} from 'react-dnd';\n\nimport {IconButton, Tooltip} from '@material-ui/core';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nimport {DND_TYPES} from '../figuresconstants';\n\nconst TrashBin = ({classes, deleteFigure, deleteFixed}) => {\n\n    const [, drop] = useDrop({\n        accept: DND_TYPES.FIGURE,\n        drop: (item) => {\n            deleteFixed(item.id);\n        }\n    });\n\n    return (\n        <Tooltip title='Удалить элемент'>\n            <IconButton className={classes.bin} onClick={deleteFigure} aria-label='Удалить элемент' ref={drop}>\n                <DeleteForeverIcon fontSize='large' color={'primary'}/>\n            </IconButton>\n        </Tooltip>\n    );\n};\n\nTrashBin.propTypes = {\n    classes: PropTypes.object.isRequired,\n    deleteFigure: PropTypes.func.isRequired,\n    deleteFixed: PropTypes.func.isRequired\n};\n\nexport default TrashBin;\n\n","import {colorArray, DEFAULT_COLOR} from '../../theme';\nimport {sample} from 'lodash';\n\nexport const getRandomColor = () => (\n    Array.isArray(colorArray) && colorArray.length > 0 ?\n        sample(colorArray) :\n        DEFAULT_COLOR\n);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {Button, ButtonGroup, Paper} from '@material-ui/core';\n\nimport DraggableFigure from './DraggableFigure';\nimport EmptyFigure from './EmptyFigure';\nimport TrashBin from './TrashBin';\nimport {FIGURE_TYPES, MAX_SIDE_RATIO, MIN_SIDE_SIZE} from '../figuresconstants';\nimport {getRandomColor} from '../figuresfunctions';\n\nconst FiguresCreator = ({classes = {}, last = null, setLast, deleteFigure, deleteFixed}) => {\n\n    const createSquare = () => {\n        setLast({\n            width: MIN_SIDE_SIZE,\n            height: MIN_SIDE_SIZE,\n            color: getRandomColor(),\n            type: FIGURE_TYPES.SQUARE\n        });\n    };\n\n    const createRectangle = () => {\n        const isVertical = false;\n        setLast({\n            width: MIN_SIDE_SIZE * (isVertical ? 1 : MAX_SIDE_RATIO),\n            height: MIN_SIDE_SIZE * (isVertical ? MAX_SIDE_RATIO : 1),\n            color: getRandomColor(),\n            type: FIGURE_TYPES.RECTANGLE\n        });\n    };\n\n    return (\n        <Paper className={classes.paper}>\n            <ButtonGroup className={classes.btnGroup} variant={'contained'} color={'primary'}\n                         aria-label='кнопки создания фигур'>\n                <Button className={classes.btn} onClick={createSquare}\n                        title={'Создает квадрат для последующего перетаскивания'}>\n                    Создать квадрат\n                </Button>\n\n                <Button className={classes.btn} onClick={createRectangle}\n                        title={'Создает прямоугольник для последующего перетаскивания'}>\n                    Создать прямоугольник\n                </Button>\n            </ButtonGroup>\n\n            <div className={classes.wrapper}>\n                {last ? <DraggableFigure {...last}/> : <EmptyFigure/>}\n                <TrashBin classes={classes} deleteFigure={deleteFigure} deleteFixed={deleteFixed} />\n            </div>\n        </Paper>\n    );\n};\n\nFiguresCreator.propTypes = {\n    classes: PropTypes.object,\n    last: PropTypes.object,\n    setLast: PropTypes.func.isRequired,\n    deleteFigure: PropTypes.func.isRequired,\n    deleteFixed: PropTypes.func.isRequired\n};\n\nexport default FiguresCreator;\n","import {makeStyles} from '@material-ui/core/styles';\nimport {MIN_SIDE_SIZE} from './apps/figures/figuresconstants';\nimport {BACK_COLOR, PINK_COLOR} from './theme';\n\nexport const useStyles = makeStyles(theme => ({\n    app: {\n        textAlign: 'center',\n        padding: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh'\n    },\n    paper: {\n        padding: theme.spacing(1),\n        width: 'auto'\n    },\n    paperMain: {\n        width: '100%',\n        flexGrow: 1\n    },\n    btn: {\n        margin: theme.spacing(1)\n    },\n    bin: {\n        marginLeft: theme.spacing(3)\n    },\n    grid: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        padding: theme.spacing(1),\n        marginTop: theme.spacing(2),\n        minHeight: `${MIN_SIDE_SIZE}px`,\n        border: '1px solid lightgrey'\n    },\n    wrapper: {\n        minHeight: `${MIN_SIDE_SIZE}px`,\n        display: 'flex',\n        justifyContent: 'center',\n        backgroundColor:BACK_COLOR,\n        padding: theme.spacing(2),\n        marginBottom: theme.spacing(2)\n    },\n    btnGroup: {\n        margin: theme.spacing(1)\n    },\n    firstButton: {\n        marginLeft: 'auto'\n    },\n    active: {\n        textDecoration: 'none',\n        color: PINK_COLOR\n    },\n    normal: {\n        textDecoration: 'none',\n        color: 'white',\n    }\n}));","import React, {useState} from 'react';\nimport {Typography} from '@material-ui/core';\n\nimport FixBoard from './components/FixBoard';\nimport FiguresCreator from './components/FiguresCreator';\nimport {FIX_BOARD_CELLS} from './figuresconstants';\n\nimport {useStyles} from '../../App.css';\n\nconst AppFigures = () => {\n    const classes = useStyles();\n    const [last, setLast] = useState(null);\n    const [fixed, setFixed] = useState(FIX_BOARD_CELLS.map(cell => null));\n\n    const deleteFigure = () => {\n        setLast(null);\n    };\n\n    const addFixed = (ind, id) => {\n        if (typeof id !== 'object') {\n            const dragged = Object.assign({}, fixed[id], {id: ind});\n            const newFixed = fixed.map((item, index) => (index === id ? null : item));\n            newFixed[ind] = Object.assign({}, dragged);\n            setFixed(newFixed);\n        } else if (last) {\n            setFixed(fixed.map((item, index) => index === ind ? Object.assign({}, last, {id: id}) : item));\n            setLast(null);\n        }\n    };\n\n    const deleleFixed = (id) => {\n        if (typeof id !== 'object' && id) {\n            setFixed(fixed.map((item, index) => index === id ? null : item));\n        } else if (!id && last) {\n            setLast(null);\n        }\n    };\n\n    return (\n        <>\n            <Typography variant={'h6'}>Генератор квадратов и прямоугольников</Typography>\n            <FiguresCreator classes={classes} last={last} setLast={setLast}\n                            deleteFigure={deleteFigure} deleteFixed={deleleFixed}/>\n            <FixBoard fixed={fixed} addFixed={addFixed}/>\n        </>\n    );\n};\n\nexport default AppFigures;","\nexport const CHART_COLORS = [\n    'rgba(109, 138, 224, 0.2)',\n    'rgba(63, 81, 181, 0.5)',\n    'rgba(58, 226, 103, 0.2)',\n    'rgba(217, 217, 194, 0.2)',\n    'rgba(89, 105, 141, 0.2)',\n    'rgba(54, 162, 235, 0.2)',\n    'rgba(255, 99, 132, 0.2)',\n    'rgba(175, 38, 255, 0.2)',\n    'rgba(255, 206, 86, 0.2)',\n    'rgba(75, 192, 192, 0.2)',\n    'rgba(153, 102, 255, 0.2)',\n    'rgba(255, 159, 64, 0.2)'\n];\nexport const CHART_TYPES = {\n    BAR: 'bar',\n    PIE: 'pie',\n    DOUGHNUT: 'doughnut'\n};\n\nexport const CHART_CANVAS = {id: 'simpleChart', width: 270, height: 100};","import {CHART_COLORS} from './chartconstants';\nimport {DICTIONARY, LABELS_LIMIT} from '../../../constants';\nimport {MDB_COLOR} from '../../../theme';\n\nexport const transformToChartData = (sourceData) => {\n    return ({\n        type: 'line',\n        data: sourceData,\n        options: {\n            maintainAspectRatio: true,\n            scales: {\n                yAxes: [{\n                    ticks: {beginAtZero: true}\n                }]\n            }\n        }\n    });\n};\n\nexport const dayMonth = (strDate) => {\n    const dateArray = strDate.split('-');\n    return dateArray.length === 3 ? dateArray[2] + '.' + dateArray[1] + '.' + dateArray[0] : '';\n};\n\nexport const getTranslate = (word, dictionary = DICTIONARY) => (dictionary[word] ? dictionary[word] : word);\n\nconst getChartDatasets = (data, columns) => {\n    const datasets = [];\n    columns.forEach((column, ind) => {\n        datasets.push(\n            {\n                label: getTranslate(column),\n                data: data ? data.map(row => row[column]) : [],\n                opacity: (ind === 0) ? 0.5 : 1,\n                backgroundColor: CHART_COLORS[ind] ? CHART_COLORS[ind] : MDB_COLOR\n            }\n        );\n    });\n    return datasets;\n};\n\nexport const getChartOptions = (minY) => ({\n    maintainAspectRatio: true,\n    pointHoverRadius: 10,\n    scales: {\n        yAxes: [{\n            ticks: {min: minY}\n        }]\n    }\n});\n\nexport const getPreparedData = (data, columns, minY = 0) => {\n\n    const datasets = getChartDatasets(data, columns);\n\n    const chartData = {\n        labels: data ? data.map(\n            row => data.length > LABELS_LIMIT ? '' : [dayMonth(row.date) + ':', row.resume, 'резюме']) : [],\n        datasets: datasets\n    };\n\n    return ({\n        data: chartData,\n        type: 'line',\n        options: getChartOptions(minY)\n    });\n};\n\nexport const NF = new Intl.NumberFormat('ru-RU');","import React, {useRef, useEffect} from 'react';\nimport {Chart} from 'chart.js';\n\nimport {Typography, Divider} from '@material-ui/core';\n\nimport {CHART_CANVAS} from './chartconstants';\nimport {getChartOptions} from './chartfunctions';\n\nconst MUILineChart = ({chart, setChart, data = [], chartTitle, chartFooter, onLegendClick, minY = 0}) => {\n        const canvas = useRef(null);\n\n        useEffect(() => {\n\n            const drawChart = () => {\n                if (!chart) {\n                    const ctx = canvas.current.getContext('2d');\n                    setChart(new Chart(ctx, data));\n                }\n            };\n\n            drawChart();\n        }, [chart, setChart, data]);\n\n        useEffect(() => {\n            if (chart) {\n                chart.data.labels = [...data.data.labels];\n                chart.data.datasets = [...data.data.datasets];\n                chart.options= getChartOptions(minY);\n                chart.update();\n            }\n        }, [chart, data, minY, setChart]);\n\n\n        useEffect(() => {\n\n            const onPointClick = (evt, item) => {\n                if (item && item.length >= 0 && item[0]) {\n                    onLegendClick(parseInt(item[0]['_index'], 10));\n                }\n            };\n\n            if (chart && !chart.options['onClick']) {\n                chart.options['onClick'] = onPointClick;\n            }\n\n        }, [onLegendClick, chart]);\n\n        return (\n            <>\n                <Typography variant={'h6'}>{chartTitle}</Typography>\n                <canvas ref={canvas} id={CHART_CANVAS.id} width={CHART_CANVAS.width} height={CHART_CANVAS.height}></canvas>\n                <Divider/>\n                <Typography>{chartFooter}</Typography>\n            </>\n        );\n    }\n;\n\nexport default MUILineChart;","import React from 'react';\nimport {Snackbar, IconButton} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {makeStyles} from '@material-ui/core/styles';\nimport { amber } from '@material-ui/core/colors';\nimport {SNACK_OPEN_TIME} from '../constants';\n\nconst useStyles = makeStyles(theme => ({\n    close: {\n        padding: theme.spacing(0.5),\n    },\n    snack: {\n        backgroundColor: amber[700]\n    }\n}));\n\nconst SimpleSnackbar = ({open, message, onSnackClose}) => {\n    const classes = useStyles();\n    return (<Snackbar\n        anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n        }}\n        open={open}\n        autoHideDuration={SNACK_OPEN_TIME}\n        onClose={onSnackClose}\n        ContentProps={{\n            'aria-describedby': 'message-id',\n            'className': classes.snack\n        }}\n        message={message}\n        action={[\n            <IconButton\n                key=\"close\"\n                aria-label=\"close\"\n                color=\"inherit\"\n                className={classes.close}\n                onClick={onSnackClose}\n            >\n                <CloseIcon/>\n            </IconButton>,\n        ]}\n    />);\n};\n\nexport default SimpleSnackbar;","import React, {useEffect, useState} from 'react';\nimport {Typography, Divider, TablePagination} from '@material-ui/core';\nimport MoodBadIcon from '@material-ui/icons/MoodBad';\n\nimport MUILineChart from '../chart/MUILineChart';\nimport SimpleSnackbar from '../../../common/SimpleSnackbar';\nimport {getPreparedData, NF} from '../chart/chartfunctions';\nimport {POINT_LIMIT, ROWS_PER_PAGE_OPTIONS} from '../../../constants';\n\nconst getMessage = (row) => (\n    row ?\n        <>\n            <Typography>На {row['date']} было вакансий: {NF.format(row['total'])}</Typography>\n            <Typography>Из них с воможностью работать удаленно: {row['remote']}</Typography>\n            <Divider/>\n            <Typography>И совершенно жуткое количество резюме: {NF.format(row['resume'])}</Typography>\n            <MoodBadIcon/>\n        </> :\n        null\n);\n\nconst ItChart = ({data, columns, chartTitle = 'График', minY = 0}) => {\n    const [message, setMessage] = useState(null);\n    const [chart, setChart] = useState(null);\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(POINT_LIMIT);\n    const [preparedData, setPreparedData] = useState(getPreparedData(data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage), columns, minY));\n\n    useEffect(() => {\n        setPreparedData(\n            getPreparedData(data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage), columns, minY)\n        );\n\n    }, [data, page, rowsPerPage, setPreparedData, columns, minY]);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    const onLegendClick = (ind) => {\n        setMessage(data[ind] ? getMessage(data[ind]) : null);\n    };\n\n    const onSnackClose = (event, reason) => {\n        if (reason && (reason === 'clickaway')) {\n            return;\n        }\n        setMessage(null);\n    };\n\n    return (\n        <>\n            <MUILineChart chart={chart} setChart={setChart}\n                          data={preparedData} minY={minY}\n                          chartTitle={chartTitle}\n                          chartFooter={''}\n                          onLegendClick={onLegendClick}\n                          hidden={false}\n            />\n            <SimpleSnackbar open={!!(message)} message={message} onSnackClose={onSnackClose}/>\n            <Typography variant={'caption'}>\n                Для просмотра детальной информации по одной точке графика нужно кликнуть по ней мышью\n            </Typography>\n            <TablePagination size={'small'}\n                             rowsPerPageOptions={ROWS_PER_PAGE_OPTIONS}\n                             labelRowsPerPage={'Точек на страницу:'}\n                             component=\"div\"\n                             count={data.length}\n                             rowsPerPage={rowsPerPage}\n                             page={page}\n                             onChangePage={handleChangePage}\n                             onChangeRowsPerPage={handleChangeRowsPerPage}/>\n\n        </>\n    );\n};\n\nexport default ItChart;","import React from 'react';\nimport {TableCell} from '@material-ui/core';\n\nconst ActionsHeaders = ({actions}) => (\n    actions ? Object.keys(actions).map(key => (\n        <TableCell key={'action-' + key}></TableCell>\n    )) : null\n);\n\nexport default ActionsHeaders;","import React from 'react';\n\nimport {\n    Home, Settings, Search, CloudQueue as Sky, Info, MoreVert as More, HelpOutline as Help, Menu,\n    MusicNote as MusicOn, MusicOff, QueueMusic as List, Close, PlaylistPlay, PlaylistAdd, Pets,\n    MenuOpen as SelectList, Delete, Edit\n} from '@material-ui/icons';\n\n\nconst MUIIcon = ({icon, iconSize = 'small'}) => {\n    switch (icon) {\n        case 'Menu':\n            return <Menu fontSize={iconSize}/>;\n        case 'Home':\n            return <Home fontSize={iconSize}/>;\n        case 'Settings':\n            return <Settings fontSize={iconSize}/>;\n        case 'Search':\n            return <Search fontSize={iconSize}/>;\n        case 'Sky':\n            return <Sky fontSize={iconSize}/>;\n        case 'Info':\n            return <Info fontSize={iconSize}/>;\n        case 'More':\n            return <More fontSize={iconSize}/>;\n        case 'Help':\n            return <Help fontSize={iconSize}/>;\n        case 'On':\n            return <MusicOn fontSize={iconSize}/>;\n        case 'Off':\n            return <MusicOff fontSize={iconSize}/>;\n        case 'Playlist':\n            return <PlaylistPlay fontSize={iconSize}/>;\n        case 'PlaylistAdd':\n            return <PlaylistAdd fontSize={iconSize}/>;\n        case 'List':\n            return <List fontSize={iconSize}/>;\n        case 'Close':\n            return <Close fontSize={iconSize}/>;\n        case 'Paw':\n            return <Pets fontSize={iconSize}/>;\n        case 'SelectList':\n            return <SelectList fontSize={iconSize}/>;\n        case 'Delete':\n            return <Delete fontSize={iconSize}/>;\n        case 'Edit':\n            return <Edit fontSize={iconSize}/>;\n        default:\n    }\n    return null;\n};\n\nexport default MUIIcon;","import React from 'react';\nimport {Button, TableCell} from '@material-ui/core';\nimport MUIIcon from '../../../components/icon/MUIIcon';\n\nconst ActionsCells = ({actions, rowInd}) => {\n    const onButtonClick = (actions, key, rowInd) => {\n        if (actions[key]['onCallback']) {\n            actions[key].onCallback(rowInd);\n        }\n    };\n\n    return (\n        actions ? Object.keys(actions).map(key => (\n            <TableCell key={rowInd + '-' + key} title={actions[key]['title']}>\n                <Button onClick={() => onButtonClick(actions, key, rowInd)}>\n                    {actions[key]['icon'] ?\n                        <MUIIcon icon={actions[key]['icon']}/> :\n                        actions[key]['title'] || ''\n                    }\n                </Button>\n            </TableCell>\n        )) : null\n    );\n};\n\nexport default ActionsCells;","import React, {useState} from 'react';\n\nimport {Paper, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, makeStyles} from '@material-ui/core';\nimport {theme} from '../../theme';\nimport ActionsHeaders from './actions/ActionsHeaders';\nimport ActionsCells from './actions/ActionsCells';\nimport {getTranslate, NF} from '../../apps/it/chart/chartfunctions';\nimport {ROWS_PER_PAGE_OPTIONS} from '../../constants';\n\nconst useStyles = () => makeStyles({\n    root: {\n        padding: theme.spacing(1),\n        maxWidth: '100%'\n    },\n    tableWrapper: {\n        maxHeight: '90vh',\n        overflowY: 'auto',\n    }\n});\n\n\nconst isNumber = (value) => (typeof(value) === 'number');\n\nconst getFormatted = (value) => (isNumber(value) ? NF.format(value) : value);\n\nconst getCell = (row, column, rowIndex) => getFormatted((row[column]) || (column === 'id' ? rowIndex + 1 : ''));\n\nconst getAlign = (aligns = {}, column) => (aligns[column] ? aligns[column] : 'left');\n\nconst getHoverTitle = (row, hoverField) => (\n    hoverField && row[hoverField] ? hoverField + ' : ' + row[hoverField] : ''\n);\n\n\n/**\n * @param actions = {'delete: {'title' : 'удалить',  icon: 'Delete', callback: }}\n */\n\nconst MUITable = ({data, columns, rowsLimit = 10, size = 'small', maxWidth = '100%',\n                      hoverField = null, actions = null, aligns = {}}) => {\n    const classes = useStyles(maxWidth);\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(rowsLimit);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    return (\n        <div style={{maxWidth: maxWidth}}>\n            <Paper className={classes.root}>\n                <div className={classes.tableWrapper}>\n                    <Table stickyHeader aria-label=\"таблица\" size={size}>\n                        <TableHead>\n                            <TableRow>\n                                {columns.map((column, ind) => (\n                                    <TableCell key={ind} align={getAlign(aligns, column)}>\n                                        {getTranslate(column)}\n                                    </TableCell>\n                                ))}\n                                <ActionsHeaders actions={actions}/>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, rowInd) =>\n                                (\n                                    <TableRow key={rowInd} title={getHoverTitle(row, hoverField)}>\n                                        {columns.map((column, ind) => (\n                                                <TableCell key={rowInd + '_' + ind}\n                                                           align={getAlign(aligns, column)}>\n                                                    {getCell(row, column, rowInd + rowsPerPage * page)}\n                                                </TableCell>\n                                            )\n                                        )}\n                                        <ActionsCells actions={actions} rowInd={rowInd + rowsPerPage * page}/>\n                                    </TableRow>\n                                ))\n                            }\n                        </TableBody>\n                    </Table>\n                    <TablePagination className={classes.selectRoot} size={'small'}\n                                     rowsPerPageOptions={[...ROWS_PER_PAGE_OPTIONS, -1]}\n                                     labelRowsPerPage={'Строк на страницу:'}\n                                     component=\"div\"\n                                     count={data.length}\n                                     rowsPerPage={rowsPerPage}\n                                     page={page}\n                                     onChangePage={handleChangePage}\n                                     onChangeRowsPerPage={handleChangeRowsPerPage}/>\n                </div>\n            </Paper>\n        </div>\n    );\n};\n\nexport default MUITable;","import React from 'react';\nimport MUITable from '../../../common/table/MUITable';\nimport {ROWS_LIMIT} from '../../../constants';\n\nconst ItTable = ({data}) => (\n    <>\n        <MUITable data={data} columns={['date', 'total', 'remote', 'resume']}\n                  aligns={{'total': 'right', 'remote': 'right', 'resume': 'right'}}\n                  rowsLimit={ROWS_LIMIT} size={'small'}/>\n    </>\n);\n\nexport default ItTable;","import {APP_ROOT, IT_COLUMNS, LOCAL_STORAGE, LS_FLAG, TASKS} from './constants';\n\nexport const taskSearch = (href) => {\n    const result = Object.entries(TASKS).find(task => APP_ROOT + task[1].href === href);\n    return Array.isArray(result)  ? result[0] : 'MAIN';\n};\n\nconst allFieldsPresent = (item, columns = IT_COLUMNS) => (columns.every(column => item[column]));\n\nexport const getDataFromLocalStorage  = () => {\n    const storageData = localStorage.getItem(LOCAL_STORAGE) ? JSON.parse(localStorage.getItem(LOCAL_STORAGE)) : [];\n    return storageData.filter(item => allFieldsPresent(item));\n};\n\nexport const saveDataToLocalStorage = (items) => {\n    let result = null;\n    try {\n        localStorage.setItem(LOCAL_STORAGE, JSON.stringify(items.filter(item => item[LS_FLAG])));\n    } catch (err) {\n        result = err.message;\n    }\n    return result;\n};\n\nexport const isData = (data) => (data && Array.isArray(data) && data.length > 0);\n\nexport const isValidIndex = (index, testedArray) => (((index >= 0) && (index < testedArray.length)));","import React from 'react';\n\nexport default React.createContext([]);\n","import React, {useContext} from 'react';\nimport useForm from 'react-hook-form';\n\nimport {Button, TextField, Typography} from '@material-ui/core';\nimport {isData, isValidIndex, saveDataToLocalStorage} from '../../functions';\nimport {IT_COLUMNS_ERRORS, LS_FLAG} from '../../constants';\nimport LSContext from '../../LSContext';\n\nconst getCurrentDate = () => {\n    const currentDate = new Date();\n    return currentDate.getFullYear() + '-' + (currentDate.getMonth() + 1) + '-' + currentDate.getDate();\n};\n\nconst getEdited = (data, index, field) => (isData(data) && isValidIndex(index, data) ? data[index][field] || '' : '');\n\nconst isError = (errors, fieldName) => (!!(errors && errors[fieldName]));\n\nconst getErrorMessages = (errors) => (\n    Object.keys(errors).map(key =>  IT_COLUMNS_ERRORS[key] || '').join(', ')\n);\n\nconst Form = ({edited = null, onDialogClose}) => {\n    const {register, handleSubmit, errors} = useForm();\n    const {lsData, setLsData} = useContext(LSContext);\n\n    const getStateAfterCreate = (element) => (\n        [...lsData, {...element, [LS_FLAG]: true}]\n    );\n\n    const getStateAfterEdit = (element, edited) => {\n        const newData = [...lsData];\n        newData[edited.index] = {...element, [LS_FLAG]: true};\n        return newData;\n    };\n\n    const onSubmit = element => {\n        const newData = edited ? getStateAfterEdit(element, edited) : getStateAfterCreate(element);\n        setLsData(newData);\n        saveDataToLocalStorage(newData);\n        onDialogClose();\n    };\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <TextField name='date' inputRef={register({required: true})} error={isError(errors, 'date')}\n                       defaultValue={edited ? getEdited(lsData, edited.index, 'date') : getCurrentDate()}\n                       margin='dense' id='date' type='date' fullWidth/>\n            <TextField name='total' inputRef={register({required: true, min: 0})} error={isError(errors, 'total')}\n                       defaultValue={edited ? getEdited(lsData, edited.index, 'total') : ''}\n                       autoFocus margin='dense' id='total' label='Всего вакансий' type='number' fullWidth/>\n            <TextField name='remote' inputRef={register({required: true, min: 0})}  error={isError(errors, 'remote')}\n                       defaultValue={edited ? getEdited(lsData, edited.index, 'remote') : ''}\n                       margin='dense' id='remote' label='Удаленка' type='number' fullWidth/>\n            <TextField name='resume' inputRef={register({required: true, min: 0})}  error={isError(errors, 'resume')}\n                       defaultValue={edited ? getEdited(lsData, edited.index, 'resume') : ''}\n                       margin='dense' id='resume' label='Резюме' type='number' fullWidth/>\n            <Typography variant='caption' color='error' style={{marginBottom: '10px'}}>\n                {getErrorMessages(errors)}\n            </Typography>\n            <Button type='submit' color='primary' variant='contained' fullWidth title='сохранить и закрыть'>\n                сохранить\n            </Button>\n\n        </form>\n    );\n};\n\n\nexport default Form;","import React from 'react';\n\nimport {Button, Divider, Typography} from '@material-ui/core';\nimport {Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle} from '@material-ui/core';\n\nimport Form from './Form';\n\nconst FormDialog = ({isFormOpen = false, setIsFormOpen, edited = null, setEdited}) => {\n\n    const onClose = () => {\n        setIsFormOpen(false);\n        setEdited(null);\n    };\n\n    return (\n        <Dialog open={isFormOpen} onClose={onClose} aria-labelledby='form-dialog-title'>\n            <DialogTitle id='form-dialog-title'>Добавление новой точки</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    <Typography variant='caption'>\n                        Все поля должны быть заполнены.\n                        Данные будут добавлены в локальное хранилище. Точки по этим данным будут добавлены и к графикам.\n                    </Typography>\n                </DialogContentText>\n                <Divider/>\n                <Form edited={edited} onDialogClose={onClose}/>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color='primary' fullWidth\n                        title={'Закрыть без сохранения изменений. При обновлении страницы все изменения будут потеряны!'}>\n                    Закрыть\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default FormDialog;","import React, {useContext, useState} from 'react';\nimport {Button, Divider} from '@material-ui/core';\nimport {Add} from '@material-ui/icons';\n\nimport MUITable from '../../../common/table/MUITable';\nimport {IT_COLUMNS, ROWS_LIMIT} from '../../../constants';\nimport FormDialog from '../../../components/form/FormDialog';\n\nimport LSContext from '../../../LSContext';\nimport {saveDataToLocalStorage} from '../../../functions';\n\nconst ItLSTable = () => {\n    const [isFormOpen, setIsFormOpen] = useState(false);\n    const [edited, setEdited] = useState(null);\n    const {lsData, setLsData} = useContext(LSContext);\n\n    const onDelete = (ind) => {\n        const newData = lsData.filter((item, index) => index !== ind);\n        setLsData(newData);\n        saveDataToLocalStorage(newData);\n    };\n\n    const onEdit = (ind) => {\n        setEdited({index: ind});\n        setIsFormOpen(true);\n    };\n\n    return (\n        <>\n            <Divider/>\n            <Button onClick={() => setIsFormOpen(true)} title='Добавить'><Add/></Button>\n            <MUITable data={lsData} columns={IT_COLUMNS}\n                      aligns={{'total': 'right', 'remote': 'right', 'resume': 'right'}}\n                      rowsLimit={ROWS_LIMIT} size={'small'}\n                      actions={\n                          {\n                              delete: {title: 'удалить', icon: 'Delete', onCallback: onDelete},\n                              edit: {title: 'изменить', icon: 'Edit', onCallback: onEdit}\n                          }\n                      }/>\n\n            <FormDialog isFormOpen={isFormOpen} setIsFormOpen={setIsFormOpen} edited={edited} setEdited={setEdited}/>\n        </>\n    );\n};\n\nexport default ItLSTable;","import React, {useState} from 'react';\nimport {Tabs, Tab, Typography} from '@material-ui/core';\n\nimport ItChart from './components/ItChart';\nimport ItTable from './components/ItTable';\nimport ItLSTable from './components/ItLsTable';\n\nconst TabContent = ({index, data, lsData}) => {\n    const minY = index === 3 ? Math.min(...data.map(item => item['resume'])) : 0;\n    switch (index) {\n        case  0:\n            return <ItLSTable data={lsData}/>;\n        case  1:\n            return <ItTable data={data}/>;\n        case  2:\n            return <ItChart data={data} columns={['total', 'remote']} chartTitle={'График по количеству вакансий'}/>;\n        case  3:\n            return <ItChart data={data} columns={['resume']} minY={minY} chartTitle={'График по количеству резюме'}/>;\n        default:\n    }\n    return <Typography color='primary' variant='caption'>Нет данных</Typography>;\n};\n\nconst AppIt = ({data, lsData}) => {\n    const [activeTab, setActiveTab] = useState(0);\n    const onTabChange = (evt, newActive) => {\n        setActiveTab(newActive);\n    };\n    return (\n        <>\n            <Tabs\n                value={activeTab}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                onChange={onTabChange}\n            >\n                <Tab label=\"Таблица\"/>\n                <Tab label=\"Таблица по умолчанию\"/>\n                <Tab label=\"Вакансии\"/>\n                <Tab label=\"Резюме\"/>\n            </Tabs>\n            <TabContent index={activeTab} data={[...data, ...lsData]} lsData={lsData}/>\n        </>\n    );\n};\n\nexport default AppIt;","import React, {useEffect, useState, useContext} from 'react';\n\nimport AppIt from '../apps/it/AppIt';\nimport {DEFAULT_IT_URL} from '../constants';\nimport LSContext from '../LSContext';\n\nconst AppItContainer = () => {\n    const [data, setData] = useState([]);\n    const {lsData} = useContext(LSContext);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        setError(null);\n        fetch(DEFAULT_IT_URL)\n            .then(res => res.json()).then(result => {\n                setData([...result]);\n        })\n            .catch(error => {\n                setError('Произошла ошибка при получении данных по умолчанию');\n                setData([]);\n            });\n    }, [setData, setError]);\n\n    return (\n        <>\n            <AppIt data={data} lsData={lsData}/>\n            <p>{error}</p>\n        </>\n    );\n};\n\nexport default AppItContainer;","import React from 'react';\nimport AppMain from './apps/main/AppMain';\nimport AppFigures from './apps/figures/AppFigures';\nimport AppItContainer from './containers/AppItContainer';\n\nexport const routes = {\n    '/': () => <AppMain/>,\n    '/it': () => <AppItContainer/>,\n    '/figures': () => <AppFigures/>\n};","import React from 'react';\nimport {Typography} from '@material-ui/core';\n\nconst NotFound = () => (\n    <>\n        <Typography>\n            Ошибка 404. Запрошенная страница не найдена.\n        </Typography>\n\n    </>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport {useRoutes} from 'hookrouter';\n\nimport {TASKS} from '../constants';\nimport {routes} from '../routes';\nimport {taskSearch} from '../functions';\nimport NotFound from '../common/NotFound';\n\n\nconst AppSwitcher = () => {\n    const routeResult = useRoutes(routes);\n    const task = taskSearch(window.location.pathname);\n\n    return (\n        <>\n            <p><small>{TASKS[task]['comment']}</small></p>\n            {routeResult || <NotFound/>}\n        </>\n    );\n};\n\nexport default AppSwitcher;","import React, {useState} from 'react';\nimport {navigate, usePath} from 'hookrouter';\nimport {Button, Menu, MenuItem} from '@material-ui/core';\n\nimport MUIIcon from '../icon/MUIIcon';\nimport {DARKPINK_COLOR} from '../../theme';\nimport {useStyles} from '../../App.css';\n\nconst Submenu = ({\n                     submenuItems = [], withNavLink = true, onLight = true, callback = null,\n                     switchIcon = 'More', text = ''\n                 }) => {\n    const [anchorEl, setAnchorEl] = useState(null);\n    const path = usePath();\n    const classes = useStyles();\n\n    const convertedItems = submenuItems.map(item => (typeof (item) === 'object' ? item : ({\n        'href': item,\n        'text': item,\n        'key': item\n    })));\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = (key) => {\n        setAnchorEl(null);\n        if (callback && key) {\n            callback(key);\n        }\n    };\n\n    const handleCloseNavigate = (href) => {\n        setAnchorEl(null);\n        navigate(href);\n    };\n\n    const handleCloseCommon = (link, withNavLink) => (\n        withNavLink ? handleCloseNavigate(link['href']) : handleClose(link['key'])\n    );\n\n    return (\n        <>\n            <Button color={'inherit'}\n                    aria-controls='submenu' aria-haspopup='true' onClick={handleClick}\n                    disabled={submenuItems.length === 0}>\n                <MUIIcon icon={switchIcon}/>\n            </Button>\n            <Menu className={classes.submenu}\n                  id='submenu'\n                  anchorEl={anchorEl}\n                  keepMounted\n                  open={Boolean(anchorEl)}\n                  onClose={handleClose}\n            >\n                {convertedItems.map((link, ind) =>\n                    <MenuItem key={ind} title={link.text} onClick={() => handleCloseCommon(link, withNavLink)}>\n                        <MUIIcon icon={link.icon}/>\n                        <span>&nbsp;</span>\n                        <span style={{color: path === link['href'] ? DARKPINK_COLOR : 'inherit'}}>{link.text}</span>\n                    </MenuItem>\n                )}\n\n            </Menu>\n        </>\n    );\n};\n\nexport default Submenu;","import React from 'react';\nimport {Button} from '@material-ui/core';\nimport {A} from 'hookrouter';\nimport {TASKS_ORDER} from '../constants';\n\nconst MainMenu = ({classes, active, setActive}) => (\n    <>\n        {TASKS_ORDER.map((item, ind) =>\n            <A className={TASKS_ORDER[ind]['href'] === active ? classes.active : classes.normal}\n               href={TASKS_ORDER[ind]['href']} key={ind}\n               title={TASKS_ORDER[ind]['comment']}>\n                <Button color='inherit' title={TASKS_ORDER[ind]['comment'] || ''}\n                        onClick={() => setActive(TASKS_ORDER[ind]['href'])}>\n                    {TASKS_ORDER[ind]['title']}\n                </Button>\n            </A>\n        )}\n    </>\n);\n\nexport default MainMenu;","import React, {useState} from 'react';\nimport {ThemeProvider} from '@material-ui/styles';\nimport {AppBar, Container, Divider, Paper, Toolbar, Typography, CssBaseline, Hidden} from '@material-ui/core';\n\nimport AppSwitcher from './apps/AppSwitcher';\nimport Submenu from './components/submenu/Submenu';\nimport MainMenu from './common/MainMenu';\nimport {TASKS_ORDER} from './constants';\nimport {theme} from './theme';\nimport {useStyles} from './App.css';\n\nimport LSContext from './LSContext';\nimport {getDataFromLocalStorage} from './functions';\n\nconst App = () => {\n    const classes = useStyles();\n    const [active, setActive] = useState(window.location.pathname);\n    const [lsData, setLsData] = useState(getDataFromLocalStorage());\n\n    const submenuItems = TASKS_ORDER.map((item, ind) => ({\n        text: item.title,\n        href: item.href,\n        key: ind\n    }));\n\n    return (\n        <>\n            <CssBaseline/>\n            <LSContext.Provider value={{lsData, setLsData}}>\n                <ThemeProvider theme={theme}>\n                    <Container className={classes.app}>\n                        <AppBar position='static'>\n                            <Toolbar>\n                                <Submenu submenuItems={submenuItems} withNavLink={true} switchIcon={'Menu'}/>\n                                <Typography variant='h6' className={classes.title}>\n                                    Rtasks + MUI\n                                </Typography>\n                                <Divider className={classes.firstButton}/>\n                                <Hidden mdDown>\n                                    <MainMenu classes={classes} active={active} setActive={setActive}/>\n                                </Hidden>\n                            </Toolbar>\n                        </AppBar>\n                        <Paper className={classes.paperMain}>\n                            <h3>Rtasks c использованием Material-UI</h3>\n                            <AppSwitcher/>\n                        </Paper>\n                        <AppBar position='static'>\n                            <Toolbar>\n                            </Toolbar>\n                        </AppBar>\n                    </Container>\n                </ThemeProvider>\n            </LSContext.Provider>\n        </>\n    );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport {DndProvider} from 'react-dnd';\n\nimport App from './App';\nimport {APP_ROOT} from './constants';\n\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport {setBasepath} from 'hookrouter';\n\nsetBasepath(APP_ROOT);\n\nReactDOM.render(<DndProvider backend={HTML5Backend}><App/></DndProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}